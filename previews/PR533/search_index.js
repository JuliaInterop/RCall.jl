var documenterSearchIndex = {"docs":
[{"location":"gettingstarted/#Getting-started","page":"Getting Started","title":"Getting started","text":"","category":"section"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"The RCall package is loaded via","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"using RCall","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"This will initialize the R process in the background.","category":"page"},{"location":"gettingstarted/#Several-Ways-to-use-RCall","page":"Getting Started","title":"Several Ways to use RCall","text":"","category":"section"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"RCall provides multiple ways to allow R interacting with Julia. ","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"R REPL mode\n@rput and @rget macros\nR\"\" string macro\nRCall API: reval, rcall, rcopy and robject etc.\n@rlibrary and @rimport macros","category":"page"},{"location":"gettingstarted/#R-REPL-mode","page":"Getting Started","title":"R REPL mode","text":"","category":"section"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"The R REPL mode allows real time switching between the Julia prompt and R prompt. Press $ to activate the R REPL mode and the R prompt will be shown. (Press backspace to leave R REPL mode in case you did not know.)","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"julia> foo = 1\n1\n\nR> x <- $foo\n\nR> x\n[1] 1","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"The R REPL mode supports variable substitution of Julia objects via the $ symbol. It is also possible to pass Julia expressions in the REPL mode.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"R> x = $(rand(10))\n\nR> sum(x)\n[1] 5.097083","category":"page"},{"location":"gettingstarted/#@rput-and-@rget-macros","page":"Getting Started","title":"@rput and @rget macros","text":"","category":"section"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"These macros transfer variables between R and Julia environments. The copied variable will have the same name as the original.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"julia> z = 1\n1\n\njulia> @rput z\n1\n\nR> z\n[1] 1\n\nR> r = 2\n\njulia> @rget r\n2.0\n\njulia> r\n2.0","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"It is also possible to put and get multiple variables in one line.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"julia> foo = 2\n2\n\njulia> bar = 4\n4\n\njulia> @rput foo bar\n4\n\nR> foo + bar\n[1] 6","category":"page"},{"location":"gettingstarted/#@R_str-string-macro","page":"Getting Started","title":"@R_str string macro","text":"","category":"section"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"Another way to use RCall is the R\"\" string macro, it is especially useful in script files.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"R\"rnorm(10)\"","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"This evaluates the expression inside the string in R, and returns the result as an RObject, which is a Julia wrapper type around an R object.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"The R\"\" string macro supports variable substitution of Julia objects via the $ symbol, whenever it is not valid R syntax (i.e. when not directly following a symbol or completed expression such as aa$bb):","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"x = randn(10)\nR\"t.test($x)\"","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"It is also possible to pass Julia expressions which are evaluated before being passed to R: these should be included in parentheses","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"R\"optim(0, $(x -> x-cos(x)), method='BFGS')\"","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"A large chunk of code could be quoted between triple string quotations","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"y = 1\nR\"\"\"\nf <- function(x, y) x + y\nret <- f(1, $y)\n\"\"\"","category":"page"},{"location":"gettingstarted/#RCall-API","page":"Getting Started","title":"RCall API","text":"","category":"section"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"The reval function evaluates any given input string as R code in the R environment. The returned result is an RObject object.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"jmtcars = reval(\"mtcars\");\nnames(jmtcars)\njmtcars[:mpg]\ntypeof(jmtcars)","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"The rcall function is used to construct function calls.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"rcall(:dim, jmtcars)","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"The arguments will be implicitly converted to RObject upon evaluation.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"rcall(:sum, Float64[1.0, 4.0, 6.0])","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"The rcopy function converts RObjects to Julia objects. It uses a variety of heuristics to pick the most appropriate Julia type:","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"rcopy(R\"c(1)\")\nrcopy(R\"c(1, 2)\")\nrcopy(R\"list(1, 'zz')\")\nrcopy(R\"list(a = 1, b= 'zz')\")","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"It is possible to force a specific conversion by passing the output type as the first argument:","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"rcopy(Array{Int}, R\"c(1, 2)\")","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"Converter could also be used specifically to yield the desired type.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"convert(Array{Float64}, R\"c(1, 2)\")","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"The robject function converts any julia object to an RObject.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"robject(1)\nrobject(Dict(:a => 1, :b = 2))","category":"page"},{"location":"gettingstarted/#@rlibrary-and-@rimport-macros","page":"Getting Started","title":"@rlibrary and @rimport macros","text":"","category":"section"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"This macro loads all exported functions/objects of an R package to the current module.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"@rlibrary boot\ncity = rcopy(R\"boot::city\")  # get some data\nratio(d, w) = sum(d[!, :x] .* w)/sum(d[!, :u] .* w)\nb = boot(city, ratio, R = 100, stype = \"w\");\nrcall(:summary, b[:t])","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"Of course, it is highly inefficient, because the data are copying multiple times between R and Julia. The R\"\" string macro is more recommended for efficiency.","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"Some R functions may have keyword arguments which contain dots. RCall provides a string macro to escape those keywords, e.g,","category":"page"},{"location":"gettingstarted/","page":"Getting Started","title":"Getting Started","text":"@rimport base as rbase\nrbase.sum([1, 2, 3], var\"rm.na\" = true)","category":"page"},{"location":"known-issues/#Installing-packages-via-Conda","page":"Known issues","title":"Installing packages via Conda","text":"","category":"section"},{"location":"known-issues/","page":"Known issues","title":"Known issues","text":"When using the Conda environment, installing packages via install.packages or devtools will result in installation failures such as \"x86_64-conda-linux-gnu-cc: not found\". Instead, use Conda to install packages. For example, Conda.add(\"r-ggplot2\").","category":"page"},{"location":"custom/#Custom-Conversion","page":"Custom Conversion","title":"Custom Conversion","text":"","category":"section"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"RCall supports an API for implicitly converting between R and Julia objects by means of rcopy and robject.","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"To illustrate the idea, we consider the following Julia type","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"using RCall","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"mutable struct Foo\n    x::Float64\n    y::String\nend","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"foo = Foo(1.0, \"hello\") \nbar = R\"\"\"\n    bar <- list(x = 1, y = \"hello\")\n    class(bar) <- \"Bar\"\n    bar\n\"\"\"\nnothing # hide","category":"page"},{"location":"custom/#R-to-Julia-direction","page":"Custom Conversion","title":"R to Julia direction","text":"","category":"section"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"The function rcopy and rcopytype are responsible for conversions of this direction. First we define an explicit converter for VecSxp (SEXP for list)","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"import RCall.rcopy\n\nfunction rcopy(::Type{Foo}, s::Ptr{VecSxp})\n    Foo(rcopy(Float64, s[:x]), rcopy(String, s[:y]))\nend","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"The convert function will dispatch the corresponding rcopy function when it is found.","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"rcopy(Foo, bar)\nconvert(Foo, bar) # calls `rcopy`\nnothing # hide","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"To allow the automatic conversion via rcopy(bar), the R class Bar has to be registered.","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"import RCall: RClass, rcopytype\n\nrcopytype(::Type{RClass{:Bar}}, s::Ptr{VecSxp}) = Foo\nfoo2 = rcopy(bar)\nnothing # hide","category":"page"},{"location":"custom/#Julia-to-R-direction","page":"Custom Conversion","title":"Julia to R direction","text":"","category":"section"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"The function RCall.sexp has to be overwritten to allow Julia to R conversion. sexp function takes a julia object and returns an SEXP object (pointer to [Sxp]).","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"First we define an explicit converter from Julia type Foo to R class Bar","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"import RCall: sexp, protect, unprotect, setclass!, RClass\n\nfunction sexp(::Type{RClass{:Bar}}, f::Foo)\n    r = protect(sexp(Dict(:x => f.x, :y => f.y)))\n    setclass!(r, sexp(\"Bar\"))\n    unprotect(1)\n    r\nend\n\nbar = robject(:Bar, foo)\nnothing # hide","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"Remark: RCall.protect and RCall.unprotect should be used to protect SEXP from being garbage collected.","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"To register the default conversion via robject(foo), we need to define sexpclass","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"import RCall.sexpclass\n\nsexpclass(f::Foo) = RClass{:Bar}\nbar = robject(foo)\nnothing # hide","category":"page"},{"location":"custom/#Using-@rput-and-@rget-is-seamless","page":"Custom Conversion","title":"Using @rput and @rget is seamless","text":"","category":"section"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"foo2.x = 2.0\n@rput foo2\nR\"\"\"\nfoo2[\"x\"]\n\"\"\"","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"R\"\"\"\nfoo2[\"x\"] = 3.0\n\"\"\"\n@rget foo2\nfoo2.x","category":"page"},{"location":"custom/#Nested-conversion","page":"Custom Conversion","title":"Nested conversion","text":"","category":"section"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"l = R\"list(foo2 = foo2, bar = $bar)\"","category":"page"},{"location":"custom/","page":"Custom Conversion","title":"Custom Conversion","text":"rcopy(l)","category":"page"},{"location":"eventloop/#Eventloop","page":"Eventloop","title":"Eventloop","text":"","category":"section"},{"location":"eventloop/","page":"Eventloop","title":"Eventloop","text":"In a non-IJulia interactive session, by R will by default open a new window to display the plot. In order to enable interactive features, such as plot-resizing, the R eventlopp will be started automatically.","category":"page"},{"location":"eventloop/","page":"Eventloop","title":"Eventloop","text":"You could start manually the R event loop via","category":"page"},{"location":"eventloop/","page":"Eventloop","title":"Eventloop","text":"RCall.rgui_start()","category":"page"},{"location":"eventloop/","page":"Eventloop","title":"Eventloop","text":"This runs frequent calls to R to check if the plot has changed, and redraw if necessary. It can be stopped with","category":"page"},{"location":"eventloop/","page":"Eventloop","title":"Eventloop","text":"RCall.rgui_stop()","category":"page"},{"location":"installation/#Installing-RCall.jl","page":"Installation","title":"Installing RCall.jl","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"RCall.jl can simply be installed with","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Pkg.add(\"RCall\")","category":"page"},{"location":"installation/#Customizing-the-R-installation","page":"Installation","title":"Customizing the R installation","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"There are two ways to configure the R installation used by RCall.jl:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Using Julia's Preferences system\nAt RCall.jl install time, or when manually re-building RCall.jl, using the R_HOME environment variable","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Should you experience problems with any of these methods, please open an issue.","category":"page"},{"location":"installation/#Customizing-the-R-installation-using-Julia's-Preferences-system","page":"Installation","title":"Customizing the R installation using Julia's Preferences system","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"You can customize the R installation using Julia's Preferences system by providing appropriate paths using RCall's Rhome and libR preferences. Julia's Preferences system allows these to be set in a few different ways. One possibility is to add the following to a LocalPreferences.toml file in the same directory as a project's Project.toml file:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"[RCall]\nRhome = \"/path/to/env/lib/R\"\nlibR = \"/path/to/env/lib/R/lib/libR.so\"","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"note: Note\nWhen these preferences are set, they take precedence over the R installation configured using the R_HOME environment variable when RCall.jl was last built.","category":"page"},{"location":"installation/#(Experimental)-Usage-with-CondaPkg","page":"Installation","title":"(Experimental) Usage with CondaPkg","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"Unlike customizing the R installation using R_HOME, the Preferences-based approach allows for each of your Julia projects using RCall.jl to use a different R installation. As such, it is appropriate for when you want to install and manage R with CondaPkg. Assuming that RCall and CondaPkg are installed, the following script will install a CondaPkg-managed R and set the correct preferences so that RCall.jl will make use of it.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"using Libdl\nusing CondaPkg\nusing Preferences\nusing UUIDs\n\nconst RCALL_UUID = UUID(\"6f49c342-dc21-5d91-9882-a32aef131414\")\n\nCondaPkg.add(\"r\")\ntarget_rhome = joinpath(CondaPkg.envdir(), \"lib\", \"R\")\nif Sys.iswindows()\n    target_libr = joinpath(target_rhome, \"bin\", Sys.WORD_SIZE==64 ? \"x64\" : \"i386\", \"R.dll\")\nelse\n    target_libr = joinpath(target_rhome, \"lib\", \"libR.$(Libdl.dlext)\")\nend\nset_preferences!(RCALL_UUID, \"Rhome\" => target_rhome, \"libR\" => target_libr)","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"So that CondaPkg managed R finds the correct versions of its shared library dependencies, such as BLAS, you must arrange for the Conda environment to be active when RCall is imported so that native library loading paths are set up correctly. If you do not do so, it is still possible that things will appear to work correctly if compatible versions are available from elsewhere in your library loading path, but the resulting code can break in some environments and so is not portable.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"At the moment there are two options for arranging for this:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"(Recommended) Use CondaPkg.activate!(ENV) to permanently modify the environment before loading RCall.\n(Experimental) Use CondaPkg.withenv() to change the environment while loading RCall/R and R libraries using native code. After the CondaPkg.withenv() block, the Conda environment will no longer be active. This approach may be needed if you need to return to a unmodified environment after loading R. Note this approach has not been thouroughly tested and may not work with all R packages.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"RCall = CondaPkg.withenv() do\n    RCall = @eval using RCall\n    # Load all R libraries that may load native code from the Conda environment here\n    return RCall\nend","category":"page"},{"location":"installation/#Customizing-the-R-installation-using-R_HOME","page":"Installation","title":"Customizing the R installation using R_HOME","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"The RCall build script (run by Pkg.add(...) or Pkg.build(...)) will check for an existing R installation by looking in the following locations, in order.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"The R_HOME environment variable, if set, should be the location of the R home directory. You could run R.home() in R to determine its location.\nOtherwise, it runs the R RHOME command, assuming R is located in your PATH.\nOtherwise, on Windows, it looks in the Windows registry.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"To change which R installation is used for RCall, set the R_HOME environment variable and run Pkg.build(\"RCall\"). Once this is configured, RCall remembers the location of R in future updates, so you don't need to set R_HOME permanently.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"ENV[\"R_HOME\"] = \"....directory of R home....\"\nPkg.build(\"RCall\")","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"As well as being setting R_HOME to a path, it can also be set to certain special values:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"When R_HOME=\"*\", RCall.jl will automatically install R for you using Conda.\nWhen R_HOME=\"\", or is unset, RCall will try to locate R_HOME by asking the copy of R in your PATH and then –- on Windows only –- by checking the registry.\nWhen R_HOME=\"_\", you opt out of all attempts to automatically locate R.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"In case no R installation is found or given at build time, the build will complete with a warning, but no error. RCall.jl will not be importable until you set a location for R using the Preferences system.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"note: R_HOME-based R installation is shared\nWhen the R installation is configured at RCall.jl install time, the absolute path to the R installation is currently hard-coded into the RCall.jl package, which can be shared between projects. This may cause problems if you are using different R installations for different projects which end up using the same copy of RCall.jl. In this case, please use the Preferences system instead which keeps different copies of the compiled RCall for different R installations. You do not need to rebuild RCall.jl manually for this, simply setting the relevant preferences will trigger rebuilds as necessary.","category":"page"},{"location":"installation/#Standard-installations","page":"Installation","title":"Standard installations","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"If you want to install R yourself, rather than relying on the automatic Conda installation, you can use one of the following options:","category":"page"},{"location":"installation/#Windows","page":"Installation","title":"Windows","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"The current Windows binary from CRAN.","category":"page"},{"location":"installation/#OS-X","page":"Installation","title":"OS X","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"The CRAN .pkg or the homebrew/science tap.","category":"page"},{"location":"installation/#Linux","page":"Installation","title":"Linux","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"Most Linux distributions allow installation of R from their package manager, however these are often out of date, and may not work with RCall.jl. We recommend that you use the updated repositories from CRAN.","category":"page"},{"location":"installation/#Ubuntu","page":"Installation","title":"Ubuntu","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"The following will update R on recent versions of Ubuntu:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E084DAB9\nsudo add-apt-repository -y \"deb http://cran.rstudio.com/bin/linux/ubuntu $(lsb_release -s -c)-cran40/\"\nsudo apt-get update -y\nsudo apt-get install -y r-base r-base-dev","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"See also the official documentation on CRAN: Ubuntu Packages For R.","category":"page"},{"location":"installation/#Julia-1.8:-Failure-on-recent-Linux-distributions","page":"Installation","title":"Julia ≤ 1.8: Failure on recent Linux distributions","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"The version of libstdc++ shipped by Julia might be outdated if you are using a recent Linux distribution (e.g. Ubuntu 19.10) and make use of certain R packages (e.g. Rcpp). In this case RCall will fail with an error message looking similar to this:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Error: package or namespace load failed for ‘package’ in dyn.load(file, DLLpath = DLLpath, ...):\nunable to load shared object '/home/user/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/libs/Rcpp.so':\n/home/user/julia-1.3.1/bin/../lib/julia/libstdc++.so.6: version `GLIBCXX_3.4.26' not found \n(required by /home/user/R/x86_64-pc-linux-gnu-library/3.6/Rcpp/libs/Rcpp.so)","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"This issue was fixed in Julia 1.9 (see https://github.com/JuliaLang/julia/issues/34276) but a workaround for older Julia versions is to replace Julia's libstdc++ with the one of your OS:","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"# works for Ubuntu 19.10 64-bit - match your locations accordingly!\ncp /usr/lib/x86_64-linux-gnu/libstdc++.so.6 $JULIA_HOME/lib/julia/","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"This problem doesn't affect Julia ≥ 1.9!","category":"page"},{"location":"installation/#Other-methods","page":"Installation","title":"Other methods","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"If you have installed R by some other method (e.g. building from scratch, or files copied but not installed in the usual manner), which often happens on cluster installations, then you may need to set R_HOME or your PATH as described above before running Pkg.build(\"RCall\") in order for the build script to find your R installation. RCall requires R to be installed with its shared library. It could be done with the flag --enable-R-shlib, consult your server administrator to see if it was the case.","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"For some environments, you might also need to specify LD_LIBRARY_PATH","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"export LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:`R RHOME`/lib\"","category":"page"},{"location":"installation/#Updating-R","page":"Installation","title":"Updating R","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"If you have updated your R installation, you may need to re-run Pkg.build(\"RCall\") as described above, possibly changing the R_HOME environment variable first.","category":"page"},{"location":"conversions/#Supported-Conversions","page":"Supported Conversions","title":"Supported Conversions","text":"","category":"section"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"RCall supports conversions to and from most base Julia types and popular Statistics packages, e.g., DataFrames, CategoricalArrays and AxisArrays.","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"using Pkg\nPkg.add(\"DataFrames\")\nPkg.add(\"AxisArrays\")\n\nusing RCall\nusing Dates\nusing DataFrames\nusing AxisArrays","category":"page"},{"location":"conversions/#Base-Julia-Types","page":"Supported Conversions","title":"Base Julia Types","text":"","category":"section"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# Julia -> R\na = robject(1)","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# R -> Julia\nrcopy(a)","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# Julia -> R\na = robject([1.0, 2.0])","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# R -> Julia\nrcopy(a)","category":"page"},{"location":"conversions/#Dictionaries","page":"Supported Conversions","title":"Dictionaries","text":"","category":"section"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# Julia -> R\nd = Dict(:a => 1, :b => [4, 5, 3])\nr = robject(d)","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# R -> Julia\nrcopy(r)","category":"page"},{"location":"conversions/#Date","page":"Supported Conversions","title":"Date","text":"","category":"section"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# Julia -> R\nd = Date(2012, 12, 12)\nr = robject(d)","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# R -> Julia\nrcopy(r)","category":"page"},{"location":"conversions/#DateTime","page":"Supported Conversions","title":"DateTime","text":"","category":"section"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# julia -> R\nd = DateTime(2012, 12, 12, 12, 12, 12)\nr = robject(d)","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# R -> Julia\nrcopy(r)","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"Note that R's POSIXct supports higher precision than DateTime:","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"r = reval(\"as.POSIXct('2020-10-09 12:09:46.1234')\")","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"d = rcopy(r)","category":"page"},{"location":"conversions/#DataFrames","page":"Supported Conversions","title":"DataFrames","text":"","category":"section"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"d = DataFrame([[1.0, 4.5, 7.0]], [:x])\n# Julia -> R\nr = robject(d)","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# R -> Julia\nrcopy(r)","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"In default, the column names of R data frames are normalized such that foo.bar would be replaced by foo_bar.","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"rcopy(R\"data.frame(a.b = 1:3)\")","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"To avoid the normalization, use normalizenames option.","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"rcopy(R\"data.frame(a.b = 1:10)\"; normalizenames = false)","category":"page"},{"location":"conversions/#AxisArrays","page":"Supported Conversions","title":"AxisArrays","text":"","category":"section"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# Julia -> R\naa = AxisArray([1,2,3], Axis{:id}([\"a\", \"b\", \"c\"]))\nr = robject(aa)","category":"page"},{"location":"conversions/","page":"Supported Conversions","title":"Supported Conversions","text":"# R -> Julia\nrcopy(AxisArray, r)","category":"page"},{"location":"#RCall.jl","page":"Introduction","title":"RCall.jl","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"R is a language for statistical computing and graphics that has been around for couple of decades and it has one of the most impressive collections of scientific and statistical packages of any environment. Recently, the Julia language has become an attractive alternative because it provides the remarkable performance of a low-level language without sacrificing the readability and ease-of-use of high-level languages. However, Julia still lacks the depth and scale of the R package environment.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"This package, RCall, facilitates communication between these two languages and allows the user to call R packages from within Julia, providing the best of both worlds. Additionally, this is a pure Julia package so it is portable and easy to use.","category":"page"},{"location":"internal/#Internal-API","page":"Internal","title":"Internal API","text":"","category":"section"},{"location":"internal/#Types","page":"Internal","title":"Types","text":"","category":"section"},{"location":"internal/","page":"Internal","title":"Internal","text":"Modules = [RCall]\nOrder   = [:type]","category":"page"},{"location":"internal/#RCall.AnySxp","page":"Internal","title":"RCall.AnySxp","text":"R \"any\" object\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.BcodeSxp","page":"Internal","title":"RCall.BcodeSxp","text":"R byte code\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.BuiltinSxp","page":"Internal","title":"RCall.BuiltinSxp","text":"R built-in function\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.CharSxp","page":"Internal","title":"RCall.CharSxp","text":"R character string\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.ClosSxp","page":"Internal","title":"RCall.ClosSxp","text":"R function closure\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.CplxSxp","page":"Internal","title":"RCall.CplxSxp","text":"R complex vector\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.DotSxp","page":"Internal","title":"RCall.DotSxp","text":"R dot-dot-dot object\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.EnvSxp","page":"Internal","title":"RCall.EnvSxp","text":"R environment\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.ExprSxp","page":"Internal","title":"RCall.ExprSxp","text":"R expression vector\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.ExtPtrSxp","page":"Internal","title":"RCall.ExtPtrSxp","text":"R external pointer\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.IntSxp","page":"Internal","title":"RCall.IntSxp","text":"R integer vector\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.LangSxp","page":"Internal","title":"RCall.LangSxp","text":"R function call\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.LglSxp","page":"Internal","title":"RCall.LglSxp","text":"R logical vector\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.ListSxp","page":"Internal","title":"RCall.ListSxp","text":"R pairs (cons) list cell\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.NilSxp","page":"Internal","title":"RCall.NilSxp","text":"R NULL value\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.PromSxp","page":"Internal","title":"RCall.PromSxp","text":"R promise\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.RClass","page":"Internal","title":"RCall.RClass","text":"R Class\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.RObject","page":"Internal","title":"RCall.RObject","text":"An RObject is a Julia wrapper for an R object (known as an \"S-expression\" or \"SEXP\"). It is stored as a pointer which is protected from the R garbage collector, until the RObject itself is finalized by Julia. The parameter is the type of the S-expression.\n\nWhen called with a Julia object as an argument, a corresponding R object is constructed.\n\njulia> RObject(1)\nRObject{IntSxp}\n[1] 1\n\njulia> RObject(1:3)\nRObject{IntSxp}\n[1] 1 2 3\n\njulia> RObject(1.0:3.0)\nRObject{RealSxp}\n[1] 1 2 3\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.RawSxp","page":"Internal","title":"RCall.RawSxp","text":"R byte vector\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.RealSxp","page":"Internal","title":"RCall.RealSxp","text":"R real vector\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.S4Sxp","page":"Internal","title":"RCall.S4Sxp","text":"R S4 object\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.SpecialSxp","page":"Internal","title":"RCall.SpecialSxp","text":"R special function\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.StrSxp","page":"Internal","title":"RCall.StrSxp","text":"R vector of character strings\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.Sxp","page":"Internal","title":"RCall.Sxp","text":"RCall.jl's type Sxp mirrors the R symbolic expression record SEXPREC in R API. These are represented by a pointer Ptr{S<:Sxp} (which is called SEXP in R API).\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.SxpHead","page":"Internal","title":"RCall.SxpHead","text":"R Sxp header: a pointer to this is used for unknown types.\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.SymSxp","page":"Internal","title":"RCall.SymSxp","text":"R symbol\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.VecSxp","page":"Internal","title":"RCall.VecSxp","text":"R list (i.e. Array{Any,1})\n\n\n\n\n\n","category":"type"},{"location":"internal/#RCall.WeakRefSxp","page":"Internal","title":"RCall.WeakRefSxp","text":"R weak reference\n\n\n\n\n\n","category":"type"},{"location":"internal/#Methods","page":"Internal","title":"Methods","text":"","category":"section"},{"location":"internal/","page":"Internal","title":"Internal","text":"Modules = [RCall]\nOrder   = [:function]","category":"page"},{"location":"internal/#Base.eltype-Tuple{Type{LglSxp}}","page":"Internal","title":"Base.eltype","text":"Element types of R vectors.\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.getindex-Tuple{Ptr{EnvSxp}, Ptr{RCall.SymSxp}}","page":"Internal","title":"Base.getindex","text":"extract the value of symbol s in the environment e\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.getindex-Tuple{Ptr{S4Sxp}, Ptr{RCall.SymSxp}}","page":"Internal","title":"Base.getindex","text":"extract an element from a S4Sxp by label\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.getindex-Union{Tuple{S}, Tuple{Ptr{S}, AbstractString}} where S<:RCall.PairListSxp","page":"Internal","title":"Base.getindex","text":"extract an element from a PairListSxp by label\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.getindex-Union{Tuple{S}, Tuple{Ptr{S}, AbstractString}} where S<:RCall.VectorSxp","page":"Internal","title":"Base.getindex","text":"Set element of a VectorSxp by a label.\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.getindex-Union{Tuple{S}, Tuple{Ptr{S}, Integer}} where S<:RCall.PairListSxp","page":"Internal","title":"Base.getindex","text":"extract the i-th element of a PairListSxp\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.isascii-Tuple{CharSxp}","page":"Internal","title":"Base.isascii","text":"Determines the encoding of the CharSxp. This is determined by the 'gp' part of the sxpinfo (this is the middle 16 bits).\n\n0x00000200 (bit 1): set of bytes (no known encoding)\n0x00000400 (bit 2): Latin-1\n0x00000800 (bit 3): UTF-8\n0x00004000 (bit 6): ASCII\n\nWe only support ASCII and UTF-8.\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.length-Union{Tuple{Ptr{S}}, Tuple{S}} where S<:Sxp","page":"Internal","title":"Base.length","text":"Sxp methods for length return the R length.\n\nRf_xlength handles Sxps that are not vector-like and R's \"long vectors\", which have a negative value for the length member.\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.names-Tuple{RObject}","page":"Internal","title":"Base.names","text":"Returns the names of an R vector, the result is converted to a Julia symbol array.\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.setindex!-Union{Tuple{S}, Tuple{Ptr{EnvSxp}, Ptr{S}, Ptr{StrSxp}}} where S<:Sxp","page":"Internal","title":"Base.setindex!","text":"assign value v to symbol s in the environment e\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.setindex!-Union{Tuple{T}, Tuple{Ptr{S4Sxp}, Ptr{T}, Ptr{RCall.SymSxp}}} where T<:Sxp","page":"Internal","title":"Base.setindex!","text":"extract an element from a S4Sxp by label\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.setindex!-Union{Tuple{T}, Tuple{S}, Tuple{Ptr{S}, Ptr{T}, AbstractString}} where {S<:RCall.PairListSxp, T<:Sxp}","page":"Internal","title":"Base.setindex!","text":"Set element of a PairListSxp by a label.\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.setindex!-Union{Tuple{T}, Tuple{S}, Tuple{Ptr{S}, Ptr{T}, AbstractString}} where {S<:RCall.VectorSxp, T<:Sxp}","page":"Internal","title":"Base.setindex!","text":"Set element of a VectorSxp by a label.\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.setindex!-Union{Tuple{T}, Tuple{S}, Tuple{Ptr{S}, Ptr{T}, Integer}} where {S<:RCall.PairListSxp, T<:Sxp}","page":"Internal","title":"Base.setindex!","text":"assign value v to the i-th element of a PairListSxp\n\n\n\n\n\n","category":"method"},{"location":"internal/#Base.size-Union{Tuple{Ptr{S}}, Tuple{S}} where S<:Sxp","page":"Internal","title":"Base.size","text":"Returns the size of an R object.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.anyna-Union{Tuple{RObject{S}}, Tuple{S}} where S<:RCall.VectorSxp","page":"Internal","title":"RCall.anyna","text":"Check if there are any NA values in the vector.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.bound-Union{Tuple{Ptr{S}}, Tuple{S}} where S<:Sxp","page":"Internal","title":"RCall.bound","text":"The R NAMED property, represented by 2 bits in the info field. This can take values 0,1 or 2, corresponding to whether it is bound to 0,1 or 2 or more symbols. See http://cran.r-project.org/doc/manuals/r-patched/R-exts.html#Named-objects-and-copying\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.decref_extptr-Tuple{Ptr{RCall.ExtPtrSxp}}","page":"Internal","title":"RCall.decref_extptr","text":"Called by the R finalizer.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.endEmbeddedR-Tuple{}","page":"Internal","title":"RCall.endEmbeddedR","text":"endEmbeddedR()\n\nClose embedded R session.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.findNamespace-Tuple{String}","page":"Internal","title":"RCall.findNamespace","text":"find namespace by name of the namespace, it is not error tolerant.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.getNamespace-Tuple{String}","page":"Internal","title":"RCall.getNamespace","text":"get namespace by name of the namespace. It is safer to be used than findNamespace as it checks bound.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.getParseErrorMsg-Tuple{}","page":"Internal","title":"RCall.getParseErrorMsg","text":"Get the R parser error msg for the previous parsing result.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.getattrib-Union{Tuple{S}, Tuple{Ptr{S}, Ptr{RCall.SymSxp}}} where S<:Sxp","page":"Internal","title":"RCall.getattrib","text":"Return a particular attribute of an RObject\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.getclass-Union{Tuple{Ptr{S}}, Tuple{S}, Tuple{Ptr{S}, Bool}} where S<:Sxp","page":"Internal","title":"RCall.getclass","text":"Returns the class of an R object.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.getnames-Union{Tuple{Ptr{S}}, Tuple{S}} where S<:Sxp","page":"Internal","title":"RCall.getnames","text":"Returns the names of an R vector.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.ijulia_displayplots-Tuple{}","page":"Internal","title":"RCall.ijulia_displayplots","text":"Called after cell evaluation. Closes graphics device and displays files in notebook.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.ijulia_setdevice-Tuple{MIME}","page":"Internal","title":"RCall.ijulia_setdevice","text":"Set options for R plotting with IJulia.\n\nThe first argument should be a MIME object: currently supported are\n\nMIME(\"image/png\") [default]\nMIME(\"image/svg+xml\")\n\nThe remaining arguments (keyword only) are passed to the appropriate R graphics device: see the relevant R help for details.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.initEmbeddedR-Tuple{}","page":"Internal","title":"RCall.initEmbeddedR","text":"initEmbeddedR()\n\nThis initializes an embedded R session. It should only be called when R is not already running (e.g. if Julia is running inside an R session)\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.isNA-Tuple{ComplexF64}","page":"Internal","title":"RCall.isNA","text":"Check if a value corresponds to R's sentinel NA values. These function should not be exported.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.isna-Tuple{RObject, Integer}","page":"Internal","title":"RCall.isna","text":"Check if the ith member of s correspond to R's NA values.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.isna-Tuple{RObject}","page":"Internal","title":"RCall.isna","text":"Check if the members of a vector are NA values. Always return a BitArray.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.isnull-Tuple{RObject}","page":"Internal","title":"RCall.isnull","text":"Check if values correspond to R's NULL object.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.julia_extptr_callback-Tuple{Ptr{ListSxp}}","page":"Internal","title":"RCall.julia_extptr_callback","text":"The function called by R .External for Julia callbacks.\n\nIt receives a Ptr{ListSxp} containing\n\na pointer to the function itself (Ptr{ExtPtrSxp})\na pointer to the Julia function (Ptr{ExtPtrSxp})\nany arguments (as Ptr{S<:Sxp})\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.makeExternalPtr","page":"Internal","title":"RCall.makeExternalPtr","text":"Create an Ptr{ExtPtrSxp} object\n\n\n\n\n\n","category":"function"},{"location":"internal/#RCall.makeNativeSymbolRef-Tuple{Ptr{Nothing}}","page":"Internal","title":"RCall.makeNativeSymbolRef","text":"Register a function pointer as an R NativeSymbol. We technically are supposed to use RregisterRoutines. Starting from R 3.4, `RMakeExternalPtrFn` is a part of R API in R 3.4. It is probably safe to such to make the external pointer.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.naeltype-Tuple{Type{LglSxp}}","page":"Internal","title":"RCall.naeltype","text":"NA element for each R base class\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.newEnvironment-Tuple{Ptr{EnvSxp}}","page":"Internal","title":"RCall.newEnvironment","text":"newEnvironment([env])\n\nCreate a new environment which extends environment env (globalEnv by default).\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.parseVector-Union{Tuple{S}, Tuple{Ptr{StrSxp}, Ref{Int32}}, Tuple{Ptr{StrSxp}, Ref{Int32}, Ptr{S}}} where S<:Sxp","page":"Internal","title":"RCall.parseVector","text":"A pure julia wrapper of R_ParseVector\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.polled_events-Tuple{}","page":"Internal","title":"RCall.polled_events","text":"polled_events()::Cvoid\n\nEvent Callback: allows R to process Julia events when R is busy. For example, writing output to stdout while running an expensive R command.\n\nSee Writing R Extensions: Calling R.dll directly and Writing R Extensions: Meshing Event Loops\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.prepare_inline_julia_code","page":"Internal","title":"RCall.prepare_inline_julia_code","text":"Prepare code for evaluating the julia expressions. When the code is evaluated, the results are stored in the R environment #JL.\n\n\n\n\n\n","category":"function"},{"location":"internal/#RCall.preserve-Union{Tuple{Ptr{S}}, Tuple{S}} where S<:Sxp","page":"Internal","title":"RCall.preserve","text":"Prevent garbage collection of an R object. Object can be released via release.\n\nThis is slower than protect, as it requires searching an internal list, but more flexible.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.protect-Union{Tuple{Ptr{S}}, Tuple{S}} where S<:Sxp","page":"Internal","title":"RCall.protect","text":"Stack-based protection of garbage collection of R objects. Objects are released via unprotect. Returns the same pointer, allowing inline use.\n\nThis is faster than preserve, but more restrictive. Really only useful inside functions.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.rcall-Tuple{Any, Vararg{Any}}","page":"Internal","title":"RCall.rcall","text":"Evaluate a function in the global environment. The first argument corresponds to the function to be called. It can be either a FunctionSxp type, a SymSxp or a Symbol.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.rcall_p-Tuple{Any, Vararg{Any}}","page":"Internal","title":"RCall.rcall_p","text":"Evaluate a function in the global environment. The first argument corresponds to the function to be called. It can be either a FunctionSxp type, a SymSxp or a Symbol.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.rcopy-Union{Tuple{RObject{S}}, Tuple{S}} where S<:Sxp","page":"Internal","title":"RCall.rcopy","text":"rcopy(r) copies the contents of an R object into a corresponding canonical Julia type.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.read_console-Tuple{Cstring, Ptr{UInt8}, Int32, Int32}","page":"Internal","title":"RCall.read_console","text":"read_console\n\nR_ReadConsole API callback to read input.\n\nSee Writing R extensions: Setting R callbacks\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.registerCFinalizerEx-Tuple{Ptr{RCall.ExtPtrSxp}}","page":"Internal","title":"RCall.registerCFinalizerEx","text":"Register finalizer to be called by the R GC.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.release-Union{Tuple{Ptr{S}}, Tuple{S}} where S<:Sxp","page":"Internal","title":"RCall.release","text":"Release object that has been gc protected by preserve.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.render-Tuple{String}","page":"Internal","title":"RCall.render","text":"Render an inline R script, substituting invalid \"$(Expr(:incomplete, Base.Meta.ParseError(\"ParseError:\\n# Error @ none:1:26\\n\\\" signs for Julia symbols\\n#                        └ ── unterminated string literal\", Base.JuliaSyntax.ParseError(Base.JuliaSyntax.SourceFile(\"\\\" signs for Julia symbols\", 0, \"none\", 1, [1, 26]), Base.JuliaSyntax.Diagnostic[Base.JuliaSyntax.Diagnostic(26, 25, :error, \"unterminated string literal\")], :string))))\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.reval","page":"Internal","title":"RCall.reval","text":"Evaluate an R symbol or language object (i.e. a function call) in an R try/catch block, returning an RObject.\n\n\n\n\n\n","category":"function"},{"location":"internal/#RCall.reval_p-Tuple{Ptr{RCall.ExprSxp}, Ptr{EnvSxp}}","page":"Internal","title":"RCall.reval_p","text":"Evaluate an R expression array iteratively. If throw_error is false, the error message and warning will be thrown to stderr.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.reval_p-Union{Tuple{Ptr{S}}, Tuple{S}, Tuple{Ptr{S}, Ptr{EnvSxp}}} where S<:Sxp","page":"Internal","title":"RCall.reval_p","text":"Evaluate an R symbol or language object (i.e. a function call) in an R try/catch block, returning a Sxp pointer.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.rimport","page":"Internal","title":"RCall.rimport","text":"Import an R package as a julia module. Sanitizes the imported symbols by default, because otherwise certain symbols cannot be used.\n\nE.g.: PerformanceAnalytics::charts.Bar in R becomes PerformanceAnalytics.charts_Bar in Julia\n\ngg = rimport(\"ggplot2\")\n\nnormalization is passed directly to replace via splatting.\n\n\n\n\n\n","category":"function"},{"location":"internal/#RCall.rlang-Tuple{Any, Vararg{Any}}","page":"Internal","title":"RCall.rlang","text":"Create a function call from a function pointer and a list of arguments and return it as an RObject, which can then be evaluated\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.rlang_p-Tuple{Any, Vararg{Any}}","page":"Internal","title":"RCall.rlang_p","text":"Create a function call from a list of arguments\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.robject-Tuple{Any}","page":"Internal","title":"RCall.robject","text":"robject(x) converts a Julia object x to a corresponding RObject implicitly. Explicit conversions could be called with robject(<R Class>, x).\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.rparse-Tuple{AbstractString}","page":"Internal","title":"RCall.rparse","text":"Parse a string as an R expression, returning an RObject.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.rparse_p-Union{Tuple{Ptr{StrSxp}}, Tuple{S}, Tuple{Ptr{StrSxp}, Ptr{S}}} where S<:Sxp","page":"Internal","title":"RCall.rparse_p","text":"Parse a string as an R expression, returning a Sxp pointer.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.rprint-Union{Tuple{S}, Tuple{IO, Ptr{S}}} where S<:Sxp","page":"Internal","title":"RCall.rprint","text":"Print the value of an Sxp using R's printing mechanism\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.safe_parseVector-Union{Tuple{S}, Tuple{Ptr{StrSxp}, Ref{Int32}}, Tuple{Ptr{StrSxp}, Ref{Int32}, Ptr{S}}} where S<:Sxp","page":"Internal","title":"RCall.safe_parseVector","text":"RParseVector wrapped by RtryCatchError. It catches possible R's stop calls which may cause longjmp in C.\n\nSee Writing R Extensions: Condition handling and cleanup code\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.set_last_value-Union{Tuple{Ptr{S}}, Tuple{S}} where S<:Sxp","page":"Internal","title":"RCall.set_last_value","text":"Set the variable .Last.value to a given value\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.setattrib!-Union{Tuple{T}, Tuple{S}, Tuple{Ptr{S}, Ptr{RCall.SymSxp}, Ptr{T}}} where {S<:Sxp, T<:Sxp}","page":"Internal","title":"RCall.setattrib!","text":"Set a particular attribute of an RObject\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.setclass!-Union{Tuple{S}, Tuple{Ptr{S}, Ptr{StrSxp}}} where S<:Sxp","page":"Internal","title":"RCall.setclass!","text":"Set the class of an R object.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.setnames!-Union{Tuple{S}, Tuple{Ptr{S}, Ptr{StrSxp}}} where S<:Sxp","page":"Internal","title":"RCall.setnames!","text":"Set the names of an R vector.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.sexp-Tuple{Any}","page":"Internal","title":"RCall.sexp","text":"sexp(x) converts a Julia object x to a pointer to a corresponding Sxp Object.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.sexp-Tuple{Ptr{RCall.SxpHead}}","page":"Internal","title":"RCall.sexp","text":"Convert a Ptr{UnknownSxp} to an appropriate Ptr{S<:Sxp}.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.sexp-Tuple{Type{RCall.RClass{:externalptr}}, Any}","page":"Internal","title":"RCall.sexp","text":"Wrap a Julia object an a R Ptr{ExtPtrSxp}.\n\nWe store the pointer and the object in a const Dict to prevent it being removed by the Julia GC.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.sexp-Tuple{Type{RCall.RClass{:function}}, Any}","page":"Internal","title":"RCall.sexp","text":"Wrap a callable Julia object f an a R ClosSxpPtr.\n\nConstructs the following R code\n\nfunction(...) .External(juliaCallback, fExPtr, ...)\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.sexp_arglist_dots-Tuple","page":"Internal","title":"RCall.sexp_arglist_dots","text":"Create an argument list for an R function call, with a varargs \"dots\" at the end.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.sexpnum-Tuple{RCall.SxpHead}","page":"Internal","title":"RCall.sexpnum","text":"The SEXPTYPE number of a Sxp\n\nDetermined from the trailing 5 bits of the first 32-bit word. Is a 0-based index into the info field of a SxpHead.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.tryEval-Union{Tuple{Ptr{S}}, Tuple{S}, Tuple{Ptr{S}, Ptr{EnvSxp}}, Tuple{Ptr{S}, Ptr{EnvSxp}, Ref{Int32}}} where S<:Sxp","page":"Internal","title":"RCall.tryEval","text":"A pure julia wrapper of R_tryEval.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.unprotect-Tuple{Integer}","page":"Internal","title":"RCall.unprotect","text":"Release last n objects gc-protected by protect.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.unsafe_array-Union{Tuple{Ptr{S}}, Tuple{S}} where S<:RCall.VectorSxp","page":"Internal","title":"RCall.unsafe_array","text":"The same as unsafe_vec, except returns an appropriately sized array.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.unsafe_vec-Union{Tuple{Ptr{S}}, Tuple{S}} where S<:RCall.VectorSxp","page":"Internal","title":"RCall.unsafe_vec","text":"Represent the contents of a VectorSxp type as a Vector.\n\nThis does not copy the contents.  If the argument is not named (in R) or otherwise protected from R's garbage collection (e.g. by keeping the containing RObject in scope) the contents of this vector can be modified or could cause a memory error when accessed.\n\nThe contents are as stored in R.  Missing values (NA's) are represented in R by sentinels.  Missing data values in RealSxp and CplxSxp show up as NaN and NaN + NaNim, respectively.  Missing data in IntSxp show up as -2147483648, the minimum 32-bit integer value.  Internally a LglSxp is represented as Vector{Int32}.  The convention is that 0 is false, -2147483648 is NA and all other values represent true.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.validate_libR-Tuple{Any}","page":"Internal","title":"RCall.validate_libR","text":"validate_libR(libR)\n\nChecks that the R library libR can be loaded and is satisfies version requirements.\n\n\n\n\n\n","category":"method"},{"location":"internal/#RCall.write_console_ex-Tuple{Ptr{UInt8}, Int32, Int32}","page":"Internal","title":"RCall.write_console_ex","text":"write_console_ex(buf::Ptr{UInt8},buflen::Cint,otype::Cint)::Cvoid\n\nR_WriteConsoleEx API callback to write console output.\n\notype specifies the output type (regular output or warning/error).\n\nSee Writing R extensions: Setting R callbacks\n\n\n\n\n\n","category":"method"},{"location":"internal/#Macros","page":"Internal","title":"Macros","text":"","category":"section"},{"location":"internal/","page":"Internal","title":"Internal","text":"Modules = [RCall]\nOrder   = [:macro]","category":"page"},{"location":"internal/#RCall.@R_str-Tuple{Any}","page":"Internal","title":"RCall.@R_str","text":"R\"...\"\n\nAn inline R expression, the result of which is evaluated and returned as an RObject.\n\nIt supports substitution of Julia variables and expressions via prefix with $ whenever not valid R syntax (i.e. when not immediately following another completed R expression):\n\nR\"glm(Sepal.Length ~ Sepal.Width, data=$iris)\"\n\nIt is also possible to pass Julia expressions:\n\nR\"plot(#55)\"\n\nAll such Julia expressions are evaluated once, before the R expression is evaluated.\n\nThe expression does not support assigning to Julia variables, so the only way retrieve values from R via the return value.\n\n\n\n\n\n","category":"macro"},{"location":"internal/#RCall.@rget-Tuple","page":"Internal","title":"RCall.@rget","text":"Copies variables from R to Julia using the same name.\n\n\n\n\n\n","category":"macro"},{"location":"internal/#RCall.@rimport-Tuple{Any, Vararg{Any}}","page":"Internal","title":"RCall.@rimport","text":"Import an R Package as a Julia module. For example,\n\n@rimport ggplot2\n\nis equivalent to ggplot2 = rimport(\"ggplot2\") with error checking.\n\nYou can also use classic Python syntax to make an alias: @rimport *package-name* as *shorthand*\n\n@rimport ggplot2 as gg\n\nwhich is equivalent to gg = rimport(\"ggplot2\").\n\n\n\n\n\n","category":"macro"},{"location":"internal/#RCall.@rlibrary-Tuple{Any}","page":"Internal","title":"RCall.@rlibrary","text":"Load all exported functions/objects of an R package to the current module. Almost equivalent to\n\n__temp__ = rimport(\"ggplot2\")\nusing .__temp__\n\n\n\n\n\n","category":"macro"},{"location":"internal/#RCall.@rput-Tuple","page":"Internal","title":"RCall.@rput","text":"Copies variables from Julia to R using the same name.\n\n\n\n\n\n","category":"macro"},{"location":"internal/#RCall.@var_str-Tuple{Any}","page":"Internal","title":"RCall.@var_str","text":"Returns a variable named \"str\". Useful for passing keyword arguments containing dots.\n\n\n\n\n\n","category":"macro"},{"location":"internal/#Constants","page":"Internal","title":"Constants","text":"","category":"section"},{"location":"internal/","page":"Internal","title":"Internal","text":"Modules = [RCall]\nOrder   = [:constant]","category":"page"},{"location":"internal/#RCall.globalEnv","page":"Internal","title":"RCall.globalEnv","text":"R global Environment.\n\nglobalEnv[:x] = 1\nglobalEnv[:x]\n\n\n\n\n\n","category":"constant"},{"location":"internal/#RCall.jtypExtPtrs","page":"Internal","title":"RCall.jtypExtPtrs","text":"Julia types (typically functions) which are wrapped in Ptr{ExtPtrSxp} are stored here to prevent garbage collection by Julia.\n\n\n\n\n\n","category":"constant"},{"location":"internal/#RCall.typs","page":"Internal","title":"RCall.typs","text":"vector of R Sxp types\n\n\n\n\n\n","category":"constant"}]
}
